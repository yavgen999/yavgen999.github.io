{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/Load.js","App.js","index.js","img/persik.png"],"names":["Home","_ref","share","id","go","fetchedUser","react_default","a","createElement","vkui","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","osname","platform","Persik","props","left","IOS","chevron_back_default","back_default","className","persik","alt","Load","style","display","alignItems","flexDirection","marginTop","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","activePanel","currentTarget","dataset","to","connect","send","message","attachments","openPopout","popout","actions","autoclose","onClose","closePopout","state","bind","assertThisInitialized","_this2","subscribe","detail","type","data","console","log","panels_Home","src_panels_Persik","panels_Load","React","Component","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.750e5f01.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\n\nconst Home = ({ share, id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t\t<br/>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={share}>\n\t\t\t\t\tСделать пост\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tshare: PropTypes.func,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, Spinner} from '@vkontakte/vkui';\n\nconst Load = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader>\n\t\t\tЗагрузка\n\t\t</PanelHeader>\n\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n\t\t\t<Spinner size=\"large\" style={{ marginTop: 20 }} />\n\t\t</div>\n\t</Panel>\n);\n\nLoad.propTypes = {\n\tid: PropTypes.string.isRequired,\n};\n\nexport default Load;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View, Alert } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Load from './panels/Load';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'load',\n\t\t\tfetchedUser: null,\n\t\t\tpopout: null,\n\t\t};\n\t\tthis.closePopout = this.closePopout.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data, activePanel: 'home' });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppShowWallPostBoxResult':\n\t\t\t\t\tthis.openPopout()\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\tshare = () => {\n\t\tconnect.send(\"VKWebAppShowWallPostBox\", {\"message\": \"Я создаю свой сервис!\", \"attachments\": \"article102343170_20574_329070dc1572eed67b\"});\n\t}\n\n\topenPopout = () => {\n\t\tthis.setState({ popout:\n\t\t\t<Alert\n\t\t\t\tactions={[{\n\t\t\t\t\ttitle: 'Ок',\n\t\t\t\t\tautoclose: true,\n\t\t\t\t\tstyle: 'destructive'\n\t\t\t\t}]}\n\t\t\t\tonClose={this.closePopout}\n\t\t\t>\n\t\t\t\t<h2>Спасибо!</h2>\n\t\t\t\t<p>Мы рады, что вы сделали репост!</p>\n\t\t\t</Alert>\n\t\t});\n\t}\n\n\tclosePopout = () => {\n\t\tthis.setState({ popout: null });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View popout={this.state.popout} activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" share={this.share} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t\t<Load id=\"load\" />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}